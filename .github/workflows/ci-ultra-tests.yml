name: ULTRA CI Base Tests

on: 
  push:
    branches:
      - ultra-**
      - ultra_**
      - ultra/**
  pull_request:
    branches:
      - ultra-**
      - ultra_**
      - ultra/**

env:
  venv_dir: .venv

jobs:
  test-heavy-base-tests:
    runs-on: ubuntu-18.04
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    container: huaweinoah/smarts:v0.4.18-minimal
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Linux packages
        run: |
          add-apt-repository ppa:git-core/ppa
          apt-get update
          apt-get install -y git
      - name: Install dependencies
        run: |
          cd ultra
          python3.7 -m venv ${{env.venv_dir}}
          . ${{env.venv_dir}}/bin/activate
          pip install --upgrade pip
          pip install --upgrade wheel
          pip install -e .
          pip install --upgrade numpy
      - name: Run ultra tests (heavy)
        # To prevent segmentation faults and/or termination signals (i.e. SIGABRT), the
        # train and evaluate tests are forked into separate subprocesses. Hence, the
        # heavy tests are divided up into two parts (forked and unforked).
        run: |
          cd ultra
          . ${{env.venv_dir}}/bin/activate
          scl scenario build-all ultra/scenarios/pool
          pytest -v \
          --durations=0 \
          ./tests/test_analysis.py
          pytest -v \
          --durations=0 \
          --forked \
          ./tests/test_train.py \
          ./tests/test_evaluate.py

  test-light-base-tests:
    runs-on: ubuntu-18.04
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    container: huaweinoah/smarts:v0.4.18-minimal
    strategy:
      matrix:
        tests:         
          - ./tests/test_adapter.py
          - ./tests/test_env.py
          - ./tests/test_episode.py
          - ./tests/test_rllib_train.py
          - ./tests/test_scenarios.py
          - ./tests/test_social_vehicles.py
          - ./tests/test_tune.py
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Linux packages
        run: |
          add-apt-repository ppa:git-core/ppa
          apt-get update
          apt-get install -y git
      - name: Install dependencies
        run: |
          cd ultra
          python3.7 -m venv ${{env.venv_dir}}
          . ${{env.venv_dir}}/bin/activate
          pip install --upgrade pip
          pip install --upgrade wheel
          pip install -e .
          pip install --upgrade numpy
      - name: Run ultra tests (light)
        run: |
          cd ultra
          . ${{env.venv_dir}}/bin/activate
          scl scenario build-all ultra/scenarios/pool
          pytest -v \
          --durations=0 \
          --forked \
          ${{matrix.tests}}

  test-package-via-setup:
    runs-on: ubuntu-18.04
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    container: huaweinoah/smarts:v0.4.18-minimal
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Linux packages
        run: |
          add-apt-repository ppa:git-core/ppa
          apt-get update
          apt-get install -y git 
      - name: Install ultra-rl via setup.py
        run: |
          cd ultra
          python3.7 -m venv ${{env.venv_dir}}
          . ${{env.venv_dir}}/bin/activate
          pip install --upgrade pip
          pip install -e .
          pip install --upgrade numpy
      - name: Run test
        run: |
          cd ultra
          . ${{env.venv_dir}}/bin/activate
          scl scenario build-all ultra/scenarios/pool
          pytest -v \
          --durations=0 \
          ./tests/test_ultra_package.py

  test-package-via-wheel:
    runs-on: ubuntu-18.04
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    container: huaweinoah/smarts:v0.4.18-minimal
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Linux packages
        run: |
          add-apt-repository ppa:git-core/ppa
          apt-get update
          apt-get install -y git    
      - name: Install ultra-rl via whl file
        run: |
          cd ultra
          python3.7 -m venv ${{env.venv_dir}}
          . ${{env.venv_dir}}/bin/activate
          pip install --upgrade pip
          pip install -e .
          pip install --upgrade numpy
          python setup.py bdist_wheel
          cd dist
          pip install $(ls . | grep ultra)
          pip install --upgrade numpy
          cd ..
      - name: Run test
        run: |
          cd ultra
          . ${{env.venv_dir}}/bin/activate
          scl scenario build-all ultra/scenarios/pool
          pytest -v \
          --durations=0 \
          ./tests/test_ultra_package.py

  test-package-via-pypi:
    runs-on: ubuntu-18.04
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    container: huaweinoah/smarts:v0.4.18-minimal
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install ultra-rl via pypi
        run: |
          cd ultra
          python3.7 -m venv ${{env.venv_dir}}
          . ${{env.venv_dir}}/bin/activate
          pip install ultra-rl
      - name: Run test
        run: |
          cd ultra
          rm evaluate.py rllib_train.py train.py tune.py
          rm -rf env
          . ${{env.venv_dir}}/bin/activate
          scl scenario build-all ultra/scenarios/pool
          pytest -v ./tests/test_ultra_package.py
